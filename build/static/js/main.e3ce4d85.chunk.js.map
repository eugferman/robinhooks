{"version":3,"sources":["redux/actions/userActions.js","redux/actions/adminActions.js","services/auth.js","services/database.js","components/Header/Header.js","pages/Logout/Logout.js","utils/errorMsg.js","components/FormLogin/FormLogin.js","pages/Login/Login.js","components/GetUsers/GetUsers.js","pages/HomeAdmin/HomeAdmin.js","pages/Home/Home.js","components/FormRegistry/FormRegistry.js","services/storage.js","components/UserArea/UserArea.js","components/Coleccion/Coleccion.js","App.js","serviceWorker.js","redux/reducers/userReducer.js","redux/reducers/adminReducer.js","redux/index.js","index.js","config.js"],"names":["setUser","user","type","payload","setAdmin","isAdmin","login","email","password","a","firebase","auth","signInWithEmailAndPassword","catch","error","result","registerAuthObserver","callback","onAuthStateChanged","db","parseDoc","doc","id","data","getDbInstance","_isTerminated","firestore","getAll","collection","get","collectionData","results","forEach","document","push","getAllRealTime","filters","order","dataAll","where","field","condition","value","orderBy","onSnapshot","addItem","item","add","addItemWithId","set","getItem","itemId","exists","delete","updateItemDescripcion","update","descripcion","updateCollectionItemImagen","collectionImages","Header","isLogged","useSelector","state","className","to","Logout","history","dispatch","useDispatch","signOut","FormLogin","history2","useHistory","useState","setEmail","setPassword","setError","errorRegistry","setErrorRegistry","handleSubmitLogin","event","preventDefault","code","errorUi","errorMsg","onSubmit","placeholder","onChange","target","Login","props","GetUsers","listaUsuarios","setListaUsuarios","useEffect","fetchData","map","users","key","idUser","name","onClick","deleteItem","HomeAdmin","Home","cancelObserver","usuarios","cantidadUsuarios","setData","collectionSearch","setCollectionSearch","seeCollection","setSeeCollection","then","length","enterColeccion","col","colBuscada","src","alt","collectionpath","height","width","FormRegistry","collectImages","xboxgamertag","nintendogamertag","ps4gamertag","formData","setFormData","uid","usuario","handleRegistryForm","createUserWithEmailAndPassword","el","uploadFile","file","setFileUploadPercent","Promise","resolve","reject","uploadTask","storage","ref","child","uuidv1","put","on","snapshot","progress","bytesTransferred","totalBytes","toFixed","getDownloadURL","downloadURL","UserArea","fileUploadPercent","updateDescription","setUpdateDescription","userDescription","setUserDescription","setUserCollection","setCollectionImages","handleUploadImage","files","newImagesArray","handleAddDescription","autoplay","autoplaySpeed","dots","arrows","infinite","speed","slidesToShow","slidesToScroll","imagen","Coleccion","match","comentario","setComentario","coleccion","setColeccion","listaComentarios","setListaComentarios","coleccionID","params","resultColeccion","messageDate","Date","timestamp","date","toLocaleDateString","time","toLocaleTimeString","handleSendComent","e","coment","App","isLoading","setIsLoading","userRedux","profile","console","log","path","component","exact","Boolean","window","location","hostname","defaultState","userReducer","action","adminReducer","rootReducers","combineReducers","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e3ce4d85.chunk.js","sourcesContent":["function setUser(user) {\n  return { type: 'SET_USER', payload: user };\n}\n\nexport { setUser };\n","function setAdmin(isAdmin) {\n  return { type: 'SET_ADMIN', payload: isAdmin };\n}\n\nexport { setAdmin };\n","import firebase from 'firebase';\n\n// FUNCIONES PROPIAS DE FIREBASE AUTH\n\nfunction registerAuth(email, password) {\n  return firebase.auth().createUserWithEmailAndPassword(email, password).catch((error) => error);\n}\n\nasync function login(email, password) {\n  const result = await firebase.auth().signInWithEmailAndPassword(email, password).catch((error) => error);\n  return result;\n}\n\nfunction logout() {\n  firebase.auth().signOut();\n}\n\nfunction registerAuthObserver(callback) {\n  return firebase.auth().onAuthStateChanged(callback);\n}\n\n\nexport {\n  registerAuth,\n  logout,\n  login,\n  registerAuthObserver\n};\n","import firebase from 'firebase';\nimport 'firebase/firestore';\n\n// FUNCIONES PROPIAS DE FIREBSE DATABASE FIRESTORE\n\nfunction parseDoc(doc) {\n  return {\n    id: doc.id,\n    ...doc.data()\n  };\n}\n\nlet db;\nfunction getDbInstance() {\n  if (!db || db._isTerminated) {\n    db = firebase.firestore();\n  }\n  return db;\n}\n\nasync function getAll(collection) {\n  const db = getDbInstance();\n  const collectionData = await db.collection(collection).get();\n\n  const results = [];\n  collectionData.forEach((document) => {\n    results.push(parseDoc(document));\n  });\n\n  return results;\n}\n\n\nasync function getAllRealTime({ collection, filters, order, callback }) {\n  let dataAll = getDbInstance();\n  dataAll = dataAll.collection(collection);\n  if (filters) {\n    dataAll = dataAll.where(filters.field, filters.condition, filters.value);\n  }\n  if (order) {\n    dataAll = dataAll.orderBy(order);\n  }\n  dataAll.onSnapshot(callback);\n}\n\nasync function addItem(collection, item) {\n  const db = getDbInstance();\n  const result = await db.collection(collection).add(item);\n  return !!result.id;\n}\n\nasync function addItemWithId(collection, item, id) {\n  db = getDbInstance();\n  const result = await db.collection(collection).doc(id).set(item);\n  return !result;\n}\n\nasync function addTwoItemWithId(collection, item, item2, id, id2) {\n  const db = getDbInstance();\n  const result = await db.collection(collection).doc(id).set(item);\n  const result2 = await db.collection(collection).doc(id2).set(item2);\n  return !result || !result2;\n}\n\nasync function getItem(collection, itemId) {\n  const db = getDbInstance();\n  const document = await db.collection(collection).doc(itemId).get();\n\n  if (document.exists) {\n    return parseDoc(document);\n  }\n  return null;\n}\n\nasync function deleteItem(collection, itemId) {\n  const db = getDbInstance();\n  const result = await db.collection(collection).doc(itemId).delete();\n  return !result;\n}\n\nasync function deleteTwoItem(collection, itemId, itemId2) {\n  const db = getDbInstance();\n  const result = await db.collection(collection).doc(itemId).delete();\n  const result2 = await db.collection(collection).doc(itemId2).delete();\n  return !result || !result2;\n}\n\nasync function updateItemDescripcion(collection, itemId, value) {\n  const db = getDbInstance();\n  const result = await db.collection(collection).doc(itemId).update({ descripcion: value });\n  return !result;\n}\n\nasync function updateItemImagen(collection, itemId, value) {\n  const db = getDbInstance();\n  const result = await db.collection(collection).doc(itemId).update({ collectionpath: value });\n  return !result;\n}\n\nasync function updateCollectionItemImagen(collection, itemId, value) {\n  const db = getDbInstance();\n  const result = await db.collection(collection).doc(itemId).update({ collectionImages: value });\n  return !result;\n}\n\nexport {\n  getDbInstance,\n  getAll,\n  addItem,\n  getItem,\n  getAllRealTime,\n  deleteItem,\n  deleteTwoItem,\n  addItemWithId,\n  addTwoItemWithId,\n  updateItemDescripcion,\n  updateItemImagen,\n  updateCollectionItemImagen\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport './Header.scss';\n\nfunction Header() {\n  const user = useSelector((state) => state.user);\n  const isLogged = user !== null;\n\n\n  return (\n    <>\n      <div className=\"header\">\n        <div className=\"header-opacity\">\n          <div className=\"header-title-nav\">\n            <div className=\"header-title\"><h1>RobinHooks</h1></div>\n            <div className=\"header-nav\">\n              {isLogged && <div><Link to=\"logout\">Logout</Link></div>}\n              {!isLogged && <div><Link to=\"login\">Login</Link></div>}\n              {!isLogged && <div><Link to=\"formregistry\">Registro</Link></div>}\n            </div>\n          </div>\n        </div>\n        <div className=\"header-separation\" />\n      </div>\n    </>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { logout } from '../../services/auth';\nimport { useDispatch } from 'react-redux';\nimport { setUser } from '../../redux/actions/userActions';\nimport { setAdmin } from '../../redux/actions/adminActions';\n\n//COMPONENTE SENCILLO QUE SI LO CLICAMOS NOS CIERRA LA SESIÓN DEL USUARIO.\nfunction Logout({history}) {\n  const dispatch = useDispatch();\n  logout();\n  dispatch(setUser(null));\n  dispatch(setAdmin(false));\n  history.push(\"/\");\n  \n  return (\n    <>\n      <div className=\"logout\">\n        <h2>Has cerrado sesión.</h2>\n      </div>      \n    </>\n  );\n}\n\nexport default Logout;\n","export default {\n  'auth/invalid-email': 'Formato de email no válido.',\n  'auth/weak-password': 'La contraseña debe tener 6 carácteres como mínimo.',\n  'auth/email-already-in-use': 'El e-mail introducido ya está en uso, introduce otro.',\n  'auth/wrong-password': 'Password incorrecto.'\n};\n","import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { setAdmin } from '../../redux/actions/adminActions';\nimport { login } from '../../services/auth';\nimport errorMsg from '../../utils/errorMsg';\n\nimport './FormLogin.scss';\n// IMPORTAMOS LIBRERIAS Y DEFINIMOS LA FUNCIÓN, ES UNA FUNCIÓN SENCILLA DONDE IMPORTAMOS EL LOGIN DE FIREBASE Y LE PASAMOS POR\n// PROP EL HISTORY QUE LO UTILIZAREMOS PARA IR A UNA PÁGINA ESPECÍFICA SI EL LOGIN ES CORRECTO\n\nfunction FormLogin() {\n  const history2 = useHistory();\n  // SETEAMOS LOS USESTATE Y EL HANDLE, SEGÚN EL LOGIN QUE HAGA IRÁ A UNA PÁGINA U OTRA.\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [errorRegistry, setErrorRegistry] = useState('');\n  const dispatch = useDispatch();\n\n  const handleSubmitLogin = async (event) => {\n    event.preventDefault();\n    setError('');\n\n    if (!email || !password) {\n      setError('Email y password son obligatorios');\n    } else {\n      const result = await login(email, password);\n      if (result && result.code) {\n        const errorUi = errorMsg[result.code];\n        setErrorRegistry(errorUi);\n      }\n    }\n\n    const result = await login(email, password);\n    if (result) {\n      if (email === 'admin@admin.com') {\n        dispatch(setAdmin(true));\n      }\n      history2.push('/');\n    }\n  };\n\n  // CONFIGURAMOS CLASES Y DIVS CON EL FORMULARIO Y LOS ONCHANGE\n  return (\n    <>\n      <div className=\"form-login\">\n        <h2>Login form: </h2>\n        {error && <div className=\"form-error\">{error}</div>}\n        {errorRegistry && <div className=\"form-error\">{errorRegistry}</div>}\n        <form onSubmit={handleSubmitLogin}>\n          <input placeholder=\"Escribe tu e-mail\" type=\"text\" value={email} onChange={(event) => setEmail(event.target.value)} /><br />\n          <input placeholder=\"Escribe tu password\" type=\"password\" value={password} onChange={(event) => setPassword(event.target.value)} /><br />\n          <input type=\"submit\" value=\"Login\" />\n        </form>\n        <div className=\"button-registro\"><Link to=\"/FormRegistry\"><p>No estás registrado? Crea tu cuenta.</p></Link></div>\n      </div>\n    </>\n  );\n}\n\nexport default FormLogin;\n","import React from 'react';\nimport FormLogin from '../../components/FormLogin/FormLogin'\n\n//PÁGINA SENCILLA QUE NOS CARGA EL COMPONENTE FORMLOGIN\nfunction Login(props) {\n\n  return <FormLogin {...props}/>\n\n}\n\nexport default Login;","import React, { useState, useEffect } from 'react';\nimport { deleteItem, getAllRealTime } from '../../services/database';\n\nimport './GetUsers.scss';\n\n// GETUSERS QUE HACEMOS UN USEEFFECT PARA SACAR LOS USUARIOS Y SETEARLOS AL DATA\nfunction GetUsers() {\n  const [listaUsuarios, setListaUsuarios] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      getAllRealTime({\n        collection: 'usuarios-registrados',\n        callback: (collectionData) => {\n          const results = [];\n          collectionData.forEach((document) => {\n            const data = document.data();\n            results.push(data);\n          });\n          setListaUsuarios(results);\n        }\n      });\n    };\n    fetchData();\n  }, []);\n\n  // HACEMOS UN MAP DE DATA PARA SACAR LOS DATOS QUE QUEREMOS\n  return (\n    <div>\n      <div className=\"lista-usuarios\">\n        <ul>\n          {listaUsuarios.map((users) => (\n            <li key={users.idUser}>\n              <p>Name: {users.name}</p>\n              <p>Email: {users.email}</p>\n              <button onClick={() => deleteItem('usuarios-registrados', users.idUser)}>Seleccionar usuario</button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default GetUsers;\n","import React from 'react';\nimport GetUsers from '../../components/GetUsers/GetUsers';\n\nimport './HomeAdmin.scss';\n\n// COMPONENTE QUE NOS MUESTRA TODOS LOS USUARIOS DEL COMPONENTE GETUSERS, EL BOTÓN ELIMINAR USUARIO ES PARA RECARGAR LA PÁGINA\n// FORMA MUY CAMPESINA DE ACTUALIZAR LOS USUARIOS.\nfunction HomeAdmin() {\n  return (\n    <div>\n      <div>\n        <h2>Admin dashboard</h2>\n      </div>\n      <div>\n        <GetUsers />\n      </div>\n    </div>\n  );\n}\n\nexport default HomeAdmin;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getAll, getAllRealTime } from '../../services/database';\nimport Login from '../Login/Login';\nimport HomeAdmin from '../HomeAdmin/HomeAdmin';\n\nimport './Home.scss';\n\n\n// CON ESTE FECTH SACAMOS A RESULT LA COLECCIÓN USUARIOS-REGISTRADOS\nconst fetchData = async () => {\n  const result = await getAll('usuarios-registrados');\n  return result;\n};\n\n// ESTE COMPONENTE NOS MUESTRA LAS COLECCIONES DE LOS USUARIOS Y SI CLICAMOS EN ALGUNA DE ELLAS NOS MUESTRA ESA COLECCIÓN EN\n// CONCRETO\nfunction Home({ history }) {\n  const user = useSelector((state) => state.user);\n  const isAdmin = useSelector((state) => state.isAdmin);\n  const [data, setData] = useState({ usuarios: [], cantidadUsuarios: 0 });\n  const isLogged = user !== null;\n  const [collectionSearch, setCollectionSearch] = useState('');\n  const [seeCollection, setSeeCollection] = useState([]);\n\n\n  useEffect(() => {\n    fetchData().then((result) => {\n      setData({ usuarios: result, cantidadUsuarios: result.length });\n    });\n  }, []);\n\n  const enterColeccion = (id) => {\n    history.push(`/${id}`);\n  };\n\n  useEffect(() => {\n    getAllRealTime({\n      collection: 'usuarios-registrados',\n      filters: { field: 'name', condition: '==', value: collectionSearch },\n      callback: (collectionData) => {\n        const results = [];\n        collectionData.forEach((document) => {\n          const col = document.data();\n          results.push(col);\n        });\n        setSeeCollection(results);\n      }\n    });\n  }, [collectionSearch]);\n\n  const handleCollectionSearch = (event) => {\n    event.preventDefault();\n  };\n  // MAP DE DATA PARA SACAR LOS DATOS QUE QUEREMOS DE USUARIOS\n  return (\n    <div>\n      {!isLogged && <Login />}\n      {isAdmin && isLogged && <HomeAdmin />}\n      {!isAdmin && isLogged && (\n      <div className=\"main-home-user\">\n        <div className=\"header-home\">\n          <div className=\"panel-busqueda-coleccion\">\n            <h4>Buscar colección: </h4>\n            <form className=\"form-busqueda-coleccion\" onClick={handleCollectionSearch}>\n              <input type=\"text\" placeholder=\"Escribe el usuario...\" value={collectionSearch} onChange={(event) => setCollectionSearch(event.target.value)} />\n              <input type=\"submit\" value=\"Buscar Roobinhooker\" />\n            </form>\n          </div>\n          <div>\n            <button><Link to=\"userarea\">Área de usuario</Link></button>\n          </div>\n        </div>\n        <div>\n\n          <div className=\"lista-colecciones\">\n            <ul>\n              {seeCollection.map((colBuscada) => (\n                <li key={colBuscada.idUser}>\n                  <div className=\"coleccion-individual\">\n                    <img src={colBuscada.collectionImages[0]} alt={colBuscada.collectionpath} height=\"140\" width=\"240\" />\n                    <p>Colección de: {colBuscada.name}</p>\n                    <button onClick={() => enterColeccion(colBuscada.idUser)}>Ver colección</button>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n\n        </div>\n        <h2>Colecciones de nuestros Robinhookers</h2>\n\n        <div className=\"lista-colecciones\">\n          <ul>\n            {data.usuarios.map((users) => (\n              <li key={users.id}>\n                <div className=\"coleccion-individual\">\n                  <img src={users.collectionImages[0]} alt={users.collectionpath} height=\"140\" width=\"240\" />\n                  <p>Roobinhooker: <b>{users.name}</b></p>\n\n                  <button onClick={() => enterColeccion(users.id)}>Ver colección</button>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n      </div>\n      )}\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { registerAuth, registerAuthObserver } from '../../services/auth';\nimport { addItemWithId, getItem } from '../../services/database';\nimport { setUser } from '../../redux/actions/userActions';\nimport './FormRegistry.scss';\nimport errorMsg from '../../utils/errorMsg';\n\nlet cancelObserver;\n\nconst FormRegistry = ({ history }) => {\n  const defaultPath = 'https://firebasestorage.googleapis.com/v0/b/robinhooks-eugenio.appspot.com/o/colecciones_de_usuarios%2Fdefault-image.jpg?alt=media&token=89a4c9d2-be43-4312-bcd4-cabe366feb33';\n  const defaultDescription = 'Introduce tu descripción...';\n  const collectImages = [];\n  const [formData, setFormData] = useState({ name: '', email: '', password: '', xboxgamertag: '', nintendogamertag: '', ps4gamertag: '' });\n  const [error, setError] = useState('');\n  const [errorRegistry, setErrorRegistry] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cancelObserver) cancelObserver();\n\n    cancelObserver = registerAuthObserver(async (user) => {\n      if (user) {\n        const profile = await getItem('usuarios-registrados', user.uid);\n        if (!profile) {\n          const usuario = { name: formData.name,\n            email: formData.email,\n            password: formData.password,\n            xboxgamertag: formData.xboxgamertag,\n            nintendogamertag: formData.nintendogamertag,\n            ps4gamertag: formData.ps4gamertag,\n            descripcion: defaultDescription,\n            collectionpath: defaultPath,\n            collectionImages: collectImages,\n            idUser: user.uid };\n\n          const result = await addItemWithId(\n            'usuarios-registrados',\n            usuario,\n            user.uid\n          );\n          if (result) {\n            dispatch(setUser(usuario));\n            history.push('/userarea');\n          }\n        }\n      }\n    });\n\n    return () => {\n      cancelObserver();\n    };\n  }, [formData.name, formData.email, formData.password, formData.xboxgamertag, formData.nintendogamertag, formData.ps4gamertag]);\n\n  const handleRegistryForm = async (event) => {\n    event.preventDefault();\n    setError('');\n\n    if (!formData.email || !formData.password || !formData.name) {\n      setError('Username, email y password son obligatorios');\n    } else {\n      const result = registerAuth(formData.email, formData.password);\n      result.then((el) => {\n        if (el && el.code) {\n          const errorUi = errorMsg[el.code];\n          setErrorRegistry(errorUi);\n        }\n      });\n    }\n  };\n  return (\n    <section className=\"form-container\">\n      <div className=\"form-registry\">\n        <h2>Formulario de registro: </h2><br />\n        {error && <div className=\"form-error\">{error}</div>}\n        {errorRegistry && <div className=\"form-error\">{errorRegistry}</div>}\n        <form onSubmit={handleRegistryForm}>\n          <input placeholder=\"Escribe tu username *\" type=\"text\" value={formData.name} onChange={(event) => setFormData({ ...formData, name: event.target.value })} /><br />\n          <input placeholder=\"Escribe tu e-mail *\" type=\"text\" value={formData.email} onChange={(event) => setFormData({ ...formData, email: event.target.value })} /><br />\n          <input placeholder=\"Escribe tu password *\" type=\"password\" value={formData.password} onChange={(event) => setFormData({ ...formData, password: event.target.value })} /><br />\n          <input placeholder=\"Escribe tu xbox gamertag\" type=\"text\" value={formData.xboxgamertag} onChange={(event) => setFormData({ ...formData, xboxgamertag: event.target.value })} /><br />\n          <input placeholder=\"Escribe tu nintendo gamertag\" type=\"text\" value={formData.nintendogamertag} onChange={(event) => setFormData({ ...formData, nintendogamertag: event.target.value })} /><br />\n          <input placeholder=\"Escribe tu ps4 gamertag\" type=\"text\" value={formData.ps4gamertag} onChange={(event) => setFormData({ ...formData, ps4gamertag: event.target.value })} /><br />\n          <input type=\"submit\" value=\"Registro\" />\n        </form>\n      </div>\n\n    </section>\n  );\n};\n\nexport default FormRegistry;\n","import firebase from 'firebase';\nimport uuidv1 from 'uuid/v1';\n\n//FUNCIONES PROPIAS DE FIREBASE STORAGE\n\nfunction uploadFile(file, setFileUploadPercent) {\n  return new Promise((resolve, reject) => {\n    const storageRef = firebase.storage().ref().child(`colecciones_de_usuarios/${uuidv1()}-${file.name}`);\n\n    const uploadTask = storageRef.put(file);\n    uploadTask.on(\n      'state_changed',\n      (snapshot) => {\n        const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setFileUploadPercent(`${progress.toFixed(2)}%`);\n      },\n      (error) => {\n        reject('error subiendo archivo');\n      },\n      async () => {\n        const downloadURL = await uploadTask.snapshot.ref.getDownloadURL();\n        resolve(downloadURL);\n      }\n    );\n  });\n}\n\nexport default uploadFile;","import React, { useState } from 'react';\nimport Slider from 'react-slick';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport uploadFile from '../../services/storage';\nimport { updateItemDescripcion, updateCollectionItemImagen } from '../../services/database';\n\nimport './UserArea.scss';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\n// ESTE COMPONENTE NOS MUESTRA EL AREA DEL USUARIO QUE HA HECHO LOGIN, CON REDUX USESELECTOR PODEMOS COGER EL USER Y UTILIZARLO\nfunction UserArea() {\n  // CONFIGURAMOS NUESTROS USESTATES Y NUESTRO USER CON USESELECTOR DEL STATE DE REDUX\n  const user = useSelector((state) => state.user);\n  const [fileUploadPercent, setFileUploadPercent] = useState('');\n  const [updateDescription, setUpdateDescription] = useState('');\n  const [userDescription, setUserDescription] = useState(user.descripcion);\n  const [userCollection, setUserCollection] = useState(user.collectionpath);\n  const [collectionImages, setCollectionImages] = useState(user.collectionImages || []);\n  const settings = {\n    autoplay: true,\n    autoplaySpeed: 2000,\n    dots: true,\n    arrows: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n\n  // ESTE HANDLE NOS COGE LA URL DE LA IMAGEN QUE HEMOS SUBIDO A FIRESTORE Y LA ACTUALIZAMOS AL COLLECTIONPATH DEL USUARIO\n  const handleUploadImage = async (event) => {\n    event.preventDefault();\n    const file = event.target.files[0];\n    const downloadURL = await uploadFile(file, setFileUploadPercent);\n    setUserCollection(downloadURL);\n    const newImagesArray = [...collectionImages, downloadURL];\n    setCollectionImages(newImagesArray);\n    const result = await updateCollectionItemImagen('usuarios-registrados', user.idUser, newImagesArray);\n  };\n\n  // ESTE HANDLE NOS ACTUALIZA EL CAMPO DESCRIPCION DEL USUARIO\n  const handleAddDescription = async (event) => {\n    event.preventDefault();\n    setUserDescription(updateDescription);\n    const result = await updateItemDescripcion('usuarios-registrados', user.idUser, updateDescription);\n    setUpdateDescription('');\n  };\n\n  // ESTE IF SI EL USUARIO AÚN NO EXISTE ME MUESTRAS LOADING...\n  if (!user) return <div>Loading...</div>;\n\n\n  // CONFIGURAMOS DIVS Y CLASES PARA MOSTRAR LOS DATOS QUE NECESITAMOS\n  return (\n    <div className=\"user-area\">\n      <h2>Área de usuario</h2>\n      <div className=\"button-usuario\">\n        <button><Link to=\"/\">Volver al Home</Link></button>\n      </div>\n      <div className=\"bloque-area-privada\">\n        <div className=\"left-datos-usuario\">\n          <div className=\"datos-usuario\">\n            <h3>Datos usuario:</h3>\n            <p><b>name:</b> {user.name}</p>\n            <p><b>email:</b> {user.email}</p>\n            <p><b>password:</b> {user.password}</p>\n            <p><b>xboxgamertag:</b> {user.xboxgamertag}</p>\n            <p><b>nintendogamertag:</b> {user.nintendogamertag}</p>\n            <p><b>ps4gamertag:</b> {user.ps4gamertag}</p>\n\n          </div>\n\n        </div>\n        <div className=\"middle-datos-usuario\">\n          <h3>Colección:</h3>\n          <p><b>Descripción colección:</b></p>\n          <p>{userDescription}</p>\n          <p><b>Imagen colección:</b></p>\n          <Slider {...settings}>\n            {user.collectionImages.map((imagen) => (\n              <div><img src={imagen} width=\"250px\" height=\"170\" /></div>\n            ))}\n          </Slider>\n        </div>\n\n        <div className=\"right-datos-usuario\">\n          <h3>Añadir colección:</h3>\n          <div>\n            <form onSubmit={handleAddDescription}>\n              <textarea\n                placeholder=\"Describe tu colección...\"\n                type=\"text\"\n                value={updateDescription}\n                onChange={(event) => setUpdateDescription(event.target.value)}\n              /><br />\n              <input type=\"submit\" value=\"Añadir descripción\" />\n            </form>\n            <h3>Subir colección:</h3>\n            <input type=\"file\" onChange={handleUploadImage} />\n            <div>{fileUploadPercent}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UserArea;\n","import React, { useState, useEffect } from 'react';\nimport Slider from 'react-slick';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getItem, addItem, getAllRealTime } from '../../services/database';\n\nimport './Coleccion.scss';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n// IMPORTAMOS LIBRERIAS\n\n\n// CREAMOS FUNCIÓN Y COMO PROP LE PASAMOS match QUE NOS SERVIRÁ PARA UNIR LA ID DE LA COLECCIÓN CON LA ID DEL USER\n// CONFIGURAMOS TODOS LOS USESTATE QUE NECESITAREMOS\nconst Coleccion = ({ match }) => {\n  const [comentario, setComentario] = useState('');\n  const [coleccion, setColeccion] = useState('');\n  const [listaComentarios, setListaComentarios] = useState([]);\n  const coleccionID = match.params.id;\n  const user = useSelector((state) => state.user);\n  const settings = {\n    autoplay: true,\n    autoplaySpeed: 2000,\n    dots: true,\n    arrows: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n\n  // AÑADIMOS UN USEFFECT PARA QUE POR UN LADO COJAMOS LA COLECCIÓN CON LA ID QUE LE PASEMOS Y A LA VEZ, CON EL GETALLREALTIME\n  // BUSCAMOS EN LA COLECCIÓN COMENTARIOS LOS CAMPOS QUE NOS INTERESE SACAR, GETALLREALTIME NOS PIDE LA COLECCIÓN, QUE LE\n  // INDIQUEMOS EL CAMPO POR EL CUAL QUEREMOS FILTRAR, EL ORDEN DE PINTADO DE LOS RESULTADOS, Y UNA FUNCION CALLBACK, QUE LE ESTAMOS\n  // DICIENDO QUE NOS DEVUELVA EN RESULTS LOS DATOS QUE LE HEMOS PEDIDO Y LUEGO SETEAMOS CON SETLISTACOMENTARIOS(RESULTS)\n  useEffect(() => {\n    const fetchData = async () => {\n      const resultColeccion = await getItem('usuarios-registrados', coleccionID);\n      setColeccion(resultColeccion);\n\n      getAllRealTime({\n        collection: 'comentarios',\n        filters: { field: 'coleccionID', condition: '==', value: coleccionID },\n        order: 'timestamp',\n        callback: (collectionData) => {\n          const results = [];\n          collectionData.forEach((document) => {\n            const data = document.data();\n            const messageDate = new Date(data.timestamp);\n            data.date = messageDate.toLocaleDateString();\n            data.time = messageDate.toLocaleTimeString();\n            results.push(data);\n          });\n          setListaComentarios(results);\n        }\n      });\n    };\n    fetchData();\n  }, []);\n\n  // CAPTURAMOS LOS DATOS DE LOS COMENTARIOS QUE PONDRÁN LOS USUARIOS Y LO AÑADIMOS CON ADDITEM\n  const handleSendComent = async () => {\n    const result = await addItem(\n      'comentarios',\n      { coleccionID, comentario, timestamp: +(new Date()), user: user.name }\n    );\n    if (result) {\n      setComentario('');\n    }\n  };\n\n  // SI LA API AÚN NO ME HA DADO LA COLECCION, MOSTRAMOS LOADING...\n  if (!coleccion) return <div>Loading...</div>;\n\n  // DEFINIMOS LAS CLASES CON LOS DIVS Y HACEMOS UN MAP AL FINAL PARA SACAR TODOS LOS DATOS QUE QUERAMOS DE LA LISTACOMENTARIOS\n  // QUE NOS DEVOLVIÓ EL USEEFFECT\n  return (\n    <div>\n      <div className=\"button-coleccion\">\n        <button type=\"button\"><Link to=\"/\">Volver a las colecciones</Link></button>\n      </div>\n      <div className=\"datos-coleccion\">\n        <h2>Colección de: {coleccion.name}</h2>\n        <div className=\"datos-coleccion-inferior\">\n          <div className=\"datos-coleccion-inferior-left\">\n              <Slider {...settings}>\n                {user.collectionImages.map((imagen) => (\n                  <div><img src={imagen} /></div>\n                ))}\n              </Slider>\n          </div>\n          <div className=\"datos-coleccion-inferior-right\">\n            <p><b>Descripción:</b> <br />{coleccion.descripcion}</p><br />\n            <p><b>Gamertags:</b></p>\n            <ul>\n              <li><b>Xbox:</b> {coleccion.xboxgamertag}</li>\n              <li><b>Nintendo:</b> {coleccion.nintendogamertag}</li>\n              <li><b>Playstation:</b> {coleccion.ps4gamertag}</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"form-comentarios\">\n        <textarea value={comentario} placeholder=\"¿Qué te parece la colección?\" onChange={(e) => setComentario(e.target.value)} />\n        <button type=\"button\" onClick={handleSendComent}>Enviar comentario</button>\n      </div>\n      <div className=\"lista-comentarios\">\n        <ul>\n          {listaComentarios.map((coment) => (\n            <li key={coment.id}>\n              <b><p className=\"lista-comentarios-usuario\">{coment.user} - {coment.date} - {coment.time}</p></b>\n              <p className=\"lista-comentarios-comentario\">{coment.comentario}</p>\n              <hr />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n    </div>\n  );\n};\n\nexport default Coleccion;\n","import React, { useState, useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { setUser } from './redux/actions/userActions';\nimport { setAdmin } from './redux/actions/adminActions';\nimport { registerAuthObserver } from './services/auth';\nimport { getItem } from './services/database';\n\nimport Header from './components/Header/Header';\nimport Logout from './pages/Logout/Logout';\nimport Login from './pages/Login/Login';\nimport Home from './pages/Home/Home';\nimport HomeAdmin from './pages/HomeAdmin/HomeAdmin';\nimport FormRegistry from './components/FormRegistry/FormRegistry';\nimport UserArea from './components/UserArea/UserArea';\nimport Coleccion from './components/Coleccion/Coleccion';\n\nimport './App.scss';\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const userRedux = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const cancelObserver = registerAuthObserver(async (user) => {\n      if (user) {\n        const profile = await getItem('usuarios-registrados', user.uid);\n        if (profile) {\n          dispatch(setUser(profile));\n        } else {\n          if (user.email === 'admin@admin.com') {\n            dispatch(setAdmin(true));\n          }\n          console.log('todavía se está registrando');\n        }\n      } else {\n        dispatch(setUser(null));\n      }\n      setIsLoading(false);\n    });\n\n    return () => {\n      cancelObserver();\n    };\n  }, []);\n\n  if (isLoading) return <div>Loading...</div>;\n  const isLogged = userRedux !== null;\n\n  return (\n    <div>\n      <Router>\n        <Header />\n        <Switch>\n          <Route path=\"/logout\" component={Logout} />\n          {!isLogged && <Route path=\"/login\" component={Login} />}\n          <Route path=\"/formregistry\" component={FormRegistry} />\n          <Route path=\"/homeadmin\" component={HomeAdmin} />\n          <Route path=\"/userarea\" component={UserArea} />\n          <Route path=\"/:id\" component={Coleccion} />\n          <Route exact path=\"/\" component={Home} />\n        </Switch>\n\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const defaultState = {\n  user: null\n};\n\nfunction userReducer(state = defaultState, action) {\n  switch (action.type) {\n    case 'SET_USER': {\n      return action.payload;\n    }\n    default: {\n      return { ...state };\n    }\n  }\n}\n\nexport default userReducer;\n","const defaultState = false;\n\nfunction adminReducer(state = defaultState, action) {\n  switch (action.type) {\n    case 'SET_ADMIN': {\n      return action.payload;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default adminReducer;\n","import { combineReducers } from 'redux';\n\nimport userReducer from './reducers/userReducer';\nimport adminReducer from './reducers/adminReducer';\n\nconst rootReducers = combineReducers({\n  user: userReducer, isAdmin: adminReducer\n})\n\nexport default rootReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport firebase from 'firebase';\nimport 'firebase/firestore';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport config from './config';\nimport rootReducers from './redux';\n\nfirebase.initializeApp(config.firebaseConfig);\n\nconst store = createStore(\n  rootReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default {\n  firebaseConfig : {\n    apiKey: \"AIzaSyD917-cQPqC4Ow1cu6gJMLwLxOxkVZrDKQ\",\n    authDomain: \"robinhooks-eugenio.firebaseapp.com\",\n    databaseURL: \"https://robinhooks-eugenio.firebaseio.com\",\n    projectId: \"robinhooks-eugenio\",\n    storageBucket: \"robinhooks-eugenio.appspot.com\",\n    messagingSenderId: \"796431814179\",\n    appId: \"1:796431814179:web:5ea7987ce5a85a7564ab96\",\n    measurementId: \"G-CTG1Q8BT8Z\"\n  }\n}\n\n\n"],"sourceRoot":""}